{"version":3,"sources":["webpack:///webpack/bootstrap 5cd7a2129382b884e28a","webpack:///./src/main.js","webpack:///./src/css/grid.min.css?4a68","webpack:///./src/less/style.less?55bc","webpack:///./src/js/todoListBuilder.js","webpack:///./src/js/todoList.js","webpack:///./src/js/todoItem.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;;;;AC7DA;;AAEA;AACA;AACsB;;AAEtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;;;;;ACpBD,yC;;;;;;ACAA,yC;;;;;;;ACAA;AAAA;AACA;AACA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AAAA;AAAA;;AAEA;;AAEA;;AAEA,iCAAiC;AACjC,sCAAsC;;AAEtC;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4BAA4B,0BAA0B;AACtD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,uBAAuB,6BAA6B;AACpD;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA,GAAG;AACH;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,iBAAiB,4BAA4B;AAC7C,iDAAiD,OAAO;AACxD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,4BAA4B;AAC7C;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAA;;;;;;;;AClZA;AAAA;AACA;AACA;AACA;AACA;;AAEqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AAAA;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,uBAAuB;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,2BAA2B;AAC3D,iCAAiC,4BAA4B;AAC7D;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,oCAAoC,8BAA8B;AAClE,qCAAqC,+BAA+B;AACpE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,sBAAsB;AAC3D;AACA,wCAAwC,yBAAyB;AACjE;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kDAAkD,qBAAqB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;;;;;;;;ACvQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AAAA;AAAA;;AAEA;;AAEA;;AAEA,iCAAiC;;AAEjC,oBAAoB;AACpB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ,GAAG;AACH;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mDAAmD,sBAAsB;AACzE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY;AACZ,GAAG;AACH;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5cd7a2129382b884e28a","'use strict';\n\nconst grid = require('./css/grid.min.css');\nconst style = require('./less/style.less');\nimport { TodoBuilder } from \"./js/todoListBuilder.js\";\n\n// TODO: add JS Doc\n\nlet boardElement = document.querySelector('#todo-board');\nlet desk = new TodoBuilder(boardElement, {\n    boardClasses: 'row-24',\n    builderFormOuterClasses: 'row-24>.col.xxs-24.md-12.lg-8.offset-md-6.offset-lg-8',\n    builderFormClasses: 'custom-form',\n    builderInputOuterClasses: 'form-control',\n    builderButtonClasses: 'btn btn-add btn-icon blue',\n    listOuterClasses: '.col.xxs-24.md-12.lg-8',\n    builderButtonText: '<span class=\"text\">Add</span><span class=\"icon\"><span class=\"fa fa-plus\">+</span></span>',\n    list: {\n        titleText: 'New List'\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/css/grid.min.css\n// module id = 1\n// module chunks = 0","// removed by extract-text-webpack-plugin\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/less/style.less\n// module id = 2\n// module chunks = 0","/*\n*    JavaScript TodoBuilder\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n\nimport { TodoList, TodoListDefaults } from \"./todoList.js\";\n\nexport const TodoBuilderDefaults = {\n\tenableAdding: true,\n\tboardClasses: '',\n\tlistOuterClasses: 'todo-box-outer',\n\tbuilderFormOuterClasses: 'builder-form-outer',\n\tbuilderFormClasses: 'builder-form',\n\tbuilderInputOuterClasses: 'form-control',\n\tbuilderButtonText: 'Add',\n\tbuilderPlaceholder: 'New Todo List',\n\tbuilderButtonClasses: 'btn btn-builder', // string of classes, e.g. '.my.outer>.nested'\n\tmoveAnimation: true,\n\tlist: { // extends TodoListDefaults\n\t\ttools: true,\n\t\tmoving: true\n\t}\n};\n\nexport class TodoBuilder {\n\n\tconstructor(builderParentElement, options) {\n\n\t\tthis.options = Object.assign({}, TodoBuilderDefaults, options);\n\t\tthis.options.list = Object.assign({}, TodoBuilderDefaults.list, options.list);\n\n\t\tthis.listsArray = [];\n\t\tthis.data = [];\n\n\t\tthis.loadTemplate(builderParentElement);\n\t\tthis.init();\n\t\tthis.initEvents();\n\n\t}\n\n\tloadTemplate(builderParentElement) {\n\t\tlet template = `\n\t\t<div class=\"todo-builder\">\n\t\t\t<div class=\"todo-board ${this.options.boardClasses}\"></div>\n\t\t</div>\n\t\t`;\n\t\tbuilderParentElement.innerHTML = template;\n\t\tthis.board = builderParentElement.querySelector('.todo-board');\n\n\t\tthis.listOuterTemplate = this.createOuter(this.options.listOuterClasses);\n\n\t\tthis.options.enableAdding && this.createBuilderForm();\n\t}\n\n\tcreateBuilderForm() {\n\t\tthis.builder = {};\n\n\t\tthis.builder.form = document.createElement('form');\n\t\tthis.builder.form.className = this.options.builderFormClasses;\n\n\t\tthis.builder.input = document.createElement('input');\n\t\tthis.builder.input.type = 'text';\n\t\tthis.builder.input.placeholder = this.options.builderPlaceholder;\n\n\t\tthis.builder.button = document.createElement('button');\n\t\tthis.builder.button.type = 'submit';\n\t\tthis.builder.button.className = this.options.builderButtonClasses;\n\t\tthis.builder.button.innerHTML = this.options.builderButtonText;\n\n\t\tlet builderOuter = this.createOuter(this.options.builderFormOuterClasses) || this.builder.form;\n\t\tlet builderOuterDeepest = builderOuter.querySelector('.outer-deepest') || builderOuter;\n\n\t\tlet inputOuter = this.createOuter(this.options.builderInputOuterClasses) || this.builder.input;\n\t\tlet inputOuterDeepest = inputOuter.querySelector('.outer-deepest') || inputOuter;\n\n\t\tif (builderOuter != this.builder.form) {\n\t\t\tbuilderOuterDeepest.appendChild(this.builder.form);\n\t\t}\n\t\tif (builderOuter != this.builder.form) {\n\t\t\tinputOuterDeepest.appendChild(this.builder.input);\n\t\t}\n\n\t\tbuilderOuterDeepest.classList.remove('outer-deepest');\n\t\tinputOuterDeepest.classList.remove('outer-deepest');\n\n\t\tthis.builder.form.appendChild(inputOuter);\n\t\tthis.builder.form.appendChild(this.builder.button);\n\t\tthis.board.parentElement.insertBefore(builderOuter, this.board);\n\t}\n\n\tcreateOuter(outerClassesString) {\n\t\tif (!outerClassesString) return;\n\n\t\tlet outerElementsArray = outerClassesString.split('>'),\n\t\t\tlast = outerElementsArray.length - 1,\n\t\t\ti = 0,\n\t\t\tstr = '';\n\n\t\touterElementsArray.forEach(outerElementsClasses => {\n\t\t\tif (i == last) {\n\t\t\t\touterElementsClasses += '.outer-deepest';\n\t\t\t}\n\n\t\t\tstr += '<div class=\"';\n\t\t\tlet elementClassArray = outerElementsClasses.split('.');\n\n\t\t\telementClassArray.forEach(className => {\n\t\t\t\tstr += className + ' ';\n\t\t\t});\n\n\t\t\tstr += '\">';\n\t\t\ti++;\n\t\t});\n\t\touterElementsArray.forEach(() => {\n\t\t\tstr += '</div>';\n\t\t});\n\n\t\tlet temp = document.createElement('div');\n\t\ttemp.innerHTML = str;\n\t\tlet outer = temp.childNodes[0];\n\n\t\treturn outer;\n\t}\n\n\tinit() {\n\t\tlet data = localStorage.todolist;\n\t\tdata && this.parseLocal(data);\n\n\t\t// build from local if exists\n\t\tif (this.data.length > 0) {\n\t\t\tthis.data.forEach(listData => {\n\t\t\t\tthis.build(listData);\n\t\t\t});\n\t\t}\n\n\t\t// build empty list if no data set\n\t\tif (this.data.length === 0 && this.options.sources.length === 0) {\n\t\t\tthis.build();\n\t\t}\n\n\t\tthis.updateStorage();\n\t}\n\n\tparseLocal(data) {\n\t\tlet parsedLists = JSON.parse(data);\n\n\t\tparsedLists.forEach(list => {\n\t\t\tlet listData = {\n\t\t\t\ttitle: list[0],\n\t\t\t\titemsArray: []\n\t\t\t};\n\t\t\tlist[1].forEach(item => {\n\t\t\t\tlet itemData = {\n\t\t\t\t\ttext: item[0],\n\t\t\t\t\tcomplete: item[1]\n\t\t\t\t};\n\t\t\t\tlistData.itemsArray.push(itemData);\n\t\t\t});\n\t\t\tthis.data.push(listData);\n\t\t});\n\t}\n\n\tbuild(listData) {\n\t\tlistData = listData || {};\n\n\t\tlet outer, outerDeepest = null;\n\n\t\tif (this.options.listOuterClasses) {\n\t\t\touter = this.listOuterTemplate.cloneNode(true);\n\t\t\touterDeepest = outer.querySelector('.outer-deepest') || outer;\n\t\t\touterDeepest.classList.remove('outer-deepest');\n\t\t\tthis.board.appendChild(outer);\n\t\t}\n\n\t\tlet list = new TodoList(outerDeepest || this.board, listData.itemsArray, this.options.list);\n\n\t\tif (listData.title) { list.title = listData.title; }\n\t\tlist.outer = outer;\n\n\t\tthis.listsArray.push(list);\n\t}\n\n\tisEdge(i, direction) {\n\t\tif ((i == 0 && direction == 'left') ||\n\t\t\t(i == this.listsArray.length - 1 && direction == 'right')) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tmoveList(i, step, direction) {\n\t\tlet list = this.listsArray[i];\n\t\tlet j = 0;\n\n\t\tswitch(direction) {\n\t\t\tcase 'left':\n\t\t\t\tj = i - step;\n\t\t\t\tbreak;\n\t\t\tcase 'right':\n\t\t\t\tj = i + step;\n\t\t\t\tbreak;\n\t\t\tdefault: return;\n\t\t}\n\n\t\tlet slist = this.listsArray[j];\n\n\t\tif (j > i) {\n\t\t\tthis.board.insertBefore(slist.outer, list.outer);\n\t\t} else {\n\t\t\tthis.board.insertBefore(list.outer, slist.outer);\n\t\t}\n\n\t\tthis.listsArray.splice(i, 1);\n\t\tthis.listsArray.splice(j, 0, list);\n\t}\n\n\tswap(mainIndex, secondaryIndex) {\n\t\tif (mainIndex == secondaryIndex) return;\n\n\t\tif (secondaryIndex > this.listsArray.length - 1) secondaryIndex = 0;\n\t\tif (secondaryIndex < 0) secondaryIndex = this.listsArray.length - 1;\n\n\t\tlet over = this.listsArray[mainIndex].outer;\n\t\tlet under = this.listsArray[secondaryIndex].outer;\n\n\t\t// create clones\n\t\tover.clone = over.cloneNode(true);\n\t\tunder.clone = under.cloneNode(true);\n\n\t\tover.clone.addEventListener('transitionend', this.onSwapped.bind(this, over, under));\n\n\t\t// set original positions and sizes\n\t\tthis.board.classList.add('scene');\n\t\tover.clone.classList.add('clone');\n\t\tunder.clone.classList.add('clone');\n\t\tover.clone.style.top = over.offsetTop + 'px';\n\t\tover.clone.style.left = over.offsetLeft + 'px';\n\t\tover.clone.style.width = over.offsetWidth + 'px';\n\t\tover.clone.style.height = over.offsetHeight + 'px';\n\n\t\tunder.clone.style.top = under.offsetTop + 'px';\n\t\tunder.clone.style.left = under.offsetLeft + 'px';\n\t\tunder.clone.style.width = under.offsetWidth + 'px';\n\t\tunder.clone.style.height = under.offsetHeight + 'px';\n\n\t\t// hide originals\n\t\tover.style.visibility = 'hidden';\n\t\tunder.style.visibility = 'hidden';\n\n\t\t// show clones\n\t\tthis.board.appendChild(over.clone);\n\t\tthis.board.appendChild(under.clone);\n\n\t\t// make others know they are starting animation\n\t\tover.clone.classList.add('animate', 'over');\n\t\tunder.clone.classList.add('animate', 'under');\n\n\t\t// move clones\n\t\tover.clone.style.top = under.offsetTop + 'px';\n\t\tover.clone.style.left = under.offsetLeft + 'px';\n\t\tunder.clone.style.top = over.offsetTop + 'px';\n\t\tunder.clone.style.left = over.offsetLeft + 'px';\n\n\t\tlet direction = mainIndex - secondaryIndex > 0 ? 'left' : 'right';\n\n\t\tthis.moveList(mainIndex, Math.abs(mainIndex - secondaryIndex), direction);\n\t}\n\n\tupdateStorage() {\n\t\tlet newData = [];\n\t\t// [...[list.title, ...[item.text, item.complete]]]\n\t\tthis.listsArray.forEach(list => {\n\t\t\tlet items = [];\n\n\t\t\t// 0: title, 1: [...items]\n\t\t\tlet listData = [list.title, items];\n\n\t\t\tlist.itemsArray.forEach(item => {\n\t\t\t\t// 0: text, 1: complete\n\t\t\t\tlet itemData = [item.text, item.complete];\n\t\t\t\titems.push(itemData);\n\t\t\t});\n\n\t\t\tnewData.push(listData);\n\t\t});\n\t\tnewData = JSON.stringify(newData);\n\n\t\tlocalStorage.setItem('todolist', newData);\n\t\tconsole.log('Storage is updated.');\n\t}\n\n\t// Events\n\n\tinitEvents() {\n\n\t\tif (this.builder.form) {\n\t\t\tthis.builder.form.addEventListener('submit', this.onCreateNew.bind(this));\n\t\t}\n\n\t\tthis.board.addEventListener('todo.list.setTitle', this.onListSetTitle.bind(this));\n\t\tthis.board.addEventListener('todo.list.addItem',  this.onListAddItem.bind(this));\n\t\tthis.board.addEventListener('todo.list.remove',\t  this.onListRemove.bind(this));\n\t\tthis.board.addEventListener('todo.list.clear', \t  this.onListClear.bind(this));\n\t\tthis.board.addEventListener('todo.list.move', \t  this.onListMove.bind(this));\n\n\t\tthis.board.addEventListener('todo.item.setStatus', this.onItemSetStatus.bind(this));\n\t\tthis.board.addEventListener('todo.item.remove',    this.onItemRemove.bind(this));\n\t\tthis.board.addEventListener('todo.item.edit', \t   this.onItemEdit.bind(this));\n\n\t}\n\n\tonCreateNew(event) {\n\t\tevent.preventDefault();\n\n\t\tthis.build({\n\t\t\ttitle: this.builder.input && this.builder.input.value\n\t\t});\n\t\tthis.builder.input.value = '';\n\n\t\tthis.updateStorage();\n\t}\n\n\tonListClear(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonListSetTitle(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonListAddItem(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonListRemove(event) {\n\t\tfor (var i = 0; i < this.listsArray.length; i++) {\n\t\t\tif (this.listsArray[i] == event.detail.list) { break; }\n\t\t}\n\t\tthis.listsArray[i].outer.remove();\n\t\tthis.listsArray.splice(i, 1);\n\n\t\tthis.updateStorage();\n\t}\n\n\tonListMove(event) {\n\t\tlet movingList = null;\n\t\tlet direction = event.detail.direction;\n\n\t\tfor (var i = 0; i < this.listsArray.length; i++) {\n\t\t\tif (this.listsArray[i] == event.detail.list) {\n\t\t\t\tmovingList = this.listsArray[i];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (this.isEdge(i, direction)) return;\n\n\t\tif (this.options.moveAnimation) {\n\t\t\tswitch(direction) {\n\t\t\t\tcase 'left':\n\t\t\t\t\tthis.swap(i, i - 1);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right':\n\t\t\t\t\tthis.swap(i, i + 1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: break;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.moveList(i, 1, direction);\n\t\t}\n\n\t\tthis.updateStorage();\n\t}\n\n\tonItemRemove(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonItemEdit(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonItemSetStatus(event) {\n\t\t// ...some actions for particular event\n\t\tthis.updateStorage();\n\t}\n\n\tonSwapped(over, under) {\n\t\tover.style.visibility = 'visible';\n\t\tunder.style.visibility = 'visible';\n\n\t\tover.clone.remove();\n\t\tunder.clone.remove();\n\n\t\tthis.board.classList.remove('scene');\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoListBuilder.js\n// module id = 3\n// module chunks = 0","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n\nimport { TodoItem, TodoItemDefaults } from \"./todoItem.js\";\n\nexport const TodoListDefaults = {\n\t// adding\n\tadding: true,\n\ticonText: '<span class=\"fa fa-plus-circle\">+</span>',\n\tplaceholder: 'New todo:',\n\t// title\n\ttitleText: 'Todo List',\n\ttitleBox: 'h5',\n\ttitleEditable: true,\n\t// tools\n\ttools: true,\n\tmoving: false,\n\tmoveLeftToolText: '<span class=\"fa fa-chevron-circle-left\">ml</span>',\n\tmoveRightToolText: '<span class=\"fa fa-chevron-circle-right\">mr</span>',\n\tremoveToolText: '<span class=\"fa fa-trash\">r</span>',\n\tclearToolText: '<span class=\"fa fa-times-circle\">c</span>',\n\t// other\n\treadonly: false,\n\titem: {} // extends TodoItemDefaults\n};\n\nconst TEMPLATE = `\n<div class=\"todo-box\">\n\t<h5 class=\"todo-title\"></h5>\n\t<ul class=\"todo-list\"></ul>\n</div>\n`;\n\nexport class TodoList {\n\n\tconstructor(listParentElement, data, options) {\n\t\tthis.options = Object.assign({}, TodoListDefaults, options);\n\t\t/*\n\t\t* Second assign is present because Object.assign makes this.options.item\n\t\t* just equal to options.item. Need to use Lodash instead.\n\t\t*/\n\t\tthis.options.item = Object.assign({}, TodoListDefaults.item, options.item);\n\n\t\tif (this.options.readonly) {\n\t\t\tthis.options.adding = false;\n\t\t\tthis.options.tools = false;\n\t\t\tthis.options.titleEditable = false;\n\t\t\tthis.options.item.editable = false;\n\t\t\tthis.options.item.removable = false;\n\t\t}\n\n\t\tthis.data = data || [];\n\t\tthis.itemsArray = []; // contains objects of TodoItem\n\n\t\tthis.loadTemplate(listParentElement);\n\t\tthis.setList(this.data);\n\t\tthis.initEvents();\n\t}\n\n\tget title() {\n\t\treturn this._title;\n\t}\n\n\tset title(value) {\n\t\tthis._title = value;\n\t\tif (this.titleBox != document.activeElement) {\n\t\t\tthis.titleBox.innerHTML = value;\n\t\t}\n\n\t\tlet setTitle = new CustomEvent(\"todo.list.setTitle\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { list: this }\n\t\t});\n\t\tthis.list.dispatchEvent(setTitle);\n\t}\n\n\tloadTemplate(listParentElement) {\n\t\tlistParentElement.innerHTML = TEMPLATE;\n\n\t\tthis.todoBox = listParentElement.querySelector('.todo-box');\n\t\tthis.list = this.todoBox.querySelector('.todo-list');\n\n\t\tthis.titleBox = listParentElement.querySelector('.todo-title');\n\t\tthis.titleBox.setAttribute('contenteditable', this.options.titleEditable);\n\t\tthis.title = this.options.titleText;\n\n\t\tthis.options.tools && this.createTools();\n\t\tthis.options.adding && this.createAddItem();\n\t}\n\n\tcreateTools() {\n\t\tthis.tools = document.createElement('div');\n\t\tthis.tools.classList.add('todo-tools');\n\n\t\tlet inner = `\n\t\t\t<button class=\"tool clear\">${this.options.clearToolText}</button>\n\t\t\t<button class=\"tool remove\">${this.options.removeToolText}</button>\n\t\t`;\n\t\tthis.tools.innerHTML = inner;\n\t\tthis.list.parentElement.insertBefore(this.tools, this.list);\n\n\t\tthis.clearTool = this.tools.querySelector('.tool.clear');\n\t\tthis.removeTool = this.tools.querySelector('.tool.remove');\n\n\t\tthis.options.moving && this.createMover();\n\t}\n\n\tcreateMover() {\n\t\tthis.moveTool = {};\n\n\t\tthis.mover = document.createElement('div');\n\t\tthis.mover.classList.add('tool', 'mover');\n\n\t\tlet inner = `\n\t\t\t<button class=\"tool move left\">${this.options.moveLeftToolText}</button>\n\t\t\t<button class=\"tool move right\">${this.options.moveRightToolText}</button>\n\t\t`;\n\t\tthis.mover.innerHTML = inner;\n\t\tthis.tools.insertBefore(this.mover, this.tools.querySelector('.tool.clear'));\n\n\t\tthis.moveTool.left = this.mover.querySelector('.tool.left');\n\t\tthis.moveTool.right = this.mover.querySelector('.tool.right');\n\t};\n\n\tcreateAddItem() {\n\t\tlet inner = `\n\t\t\t<div class=\"todo-add--icon add\">${this.options.iconText}</div>\n\t\t\t<div class=\"todo-add--text single-line\">\n\t            <div class=\"placeholder\">${this.options.placeholder}</div>\n\t            <div class=\"add-box\" contenteditable=\"true\"></div>\n\t        </div>\n\t\t`;\n\n\t\tthis.addElement = document.createElement('div');\n\t\tthis.addElement.classList.add('todo-add', 'editable');\n\n\t\tthis.addElement.innerHTML = inner;\n\t\tthis.addBox = this.addElement.querySelector('.add-box');\n\n\t\tthis.todoBox.appendChild(this.addElement);\n\t}\n\n\tsetList(data) {\n\t\tdata = data || [];\n\t\tthis.itemsArray = [];\n\t\tthis.list.innerHTML = '';\n\n\t\tdata.forEach((todo) => {\n\t\t\tlet item = new TodoItem(todo.text, todo.complete, this.options.item);\n\t\t\tthis.add(item);\n\t\t});\n\t}\n\n\tadd(item) {\n\t\tthis.list.appendChild(item.element);\n\n\t\tthis.itemsArray.push(item);\n\n\t\tlet addItem = new CustomEvent(\"todo.list.addItem\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { list: this }\n\t\t});\n\t\tthis.list.dispatchEvent(addItem);\n\t}\n\n\tinitEvents() {\n\t\tthis.list.addEventListener('todo.item.remove', this.onRemoveTodo.bind(this));\n\t\tthis.titleBox.addEventListener('input', this.onTitleInput.bind(this));\n\n\t\tif (this.options.adding) {\n\t\t\tthis.addElement.addEventListener('click', ()=>{ this.addBox.focus(); });\n\t\t\tthis.addBox.addEventListener('focus', this.onAddBoxFocus.bind(this));\n\t\t\tthis.addBox.addEventListener('blur', this.onAddBoxBlur.bind(this));\n\t\t\tthis.addBox.addEventListener('input', this.onAddTodo.bind(this));\n\t\t}\n\t\tif (this.options.tools) {\n\t\t\tthis.clearTool.addEventListener('click', this.onListClear.bind(this));\n\t\t\tthis.removeTool.addEventListener('click', this.onListRemove.bind(this));\n\t\t}\n\t\tif (this.options.moving) {\n\t\t\tthis.moveTool.left.addEventListener('click', this.onListMove.bind(this, 'left'));\n\t\t\tthis.moveTool.right.addEventListener('click', this.onListMove.bind(this, 'right'));\n\t\t}\n\t}\n\n\tonRemoveTodo(event) {\n\t\tlet item = event.detail.item;\n\t\tlet index = this.itemsArray.indexOf(item);\n\t\tthis.itemsArray.splice(index, 1);\n\t}\n\n\tonAddBoxFocus(event) {\n\t\tthis.addElement.classList.add('active');\n\t}\n\n\tonAddBoxBlur(event) {\n\t\tthis.addElement.classList.remove('active');\n\t}\n\n\tonAddTodo(event) {\n\t\tevent.preventDefault();\n\n\t\tlet value = this.addBox.innerHTML;\n\n\t\tif (value) {\n\t\t\tlet item = new TodoItem(value, false, this.options.item, this.list);\n\t\t\tthis.add(item);\n\t\t\tthis.addBox.innerHTML = '';\n\t\t\tthis.addElement && this.addElement.classList.remove('active');\n\t\t\titem.textBox.focus();\n\n\t\t\titem && this.options.onAddTodo && this.options.onAddTodo.call(this, item);\n\t\t}\n\t}\n\n\tonTitleInput(event) {\n\t\tthis.title = this.titleBox.innerHTML;\n\t}\n\n\tonListClear(event) {\n\t\tthis.setList();\n\n\t\tlet clear = new CustomEvent(\"todo.list.clear\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { list: this }\n\t\t});\n\t\tthis.list.dispatchEvent(clear);\n\t}\n\n\tonListRemove(event) {\n\t\tlet listRemove = new CustomEvent(\"todo.list.remove\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { list: this }\n\t\t});\n\t\tthis.list.dispatchEvent(listRemove);\n\n\t\tthis.todoBox.remove();\n\t}\n\n\tonListMove(direction, event) {\n\t\tlet moveTodoList = new CustomEvent(\"todo.list.move\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: {\n\t\t\t\tdirection: direction,\n\t\t\t\tlist: this\n\t\t\t}\n\t\t});\n\t\tthis.list.dispatchEvent(moveTodoList);\n\t}\n\n\tplaceCaretAtEnd(element) {\n\t\tlet range, selection;\n\t\trange = document.createRange();\n\t\trange.selectNodeContents(element);\n\t\trange.collapse(false);\n\t\tselection = window.getSelection();\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(range);\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoList.js\n// module id = 4\n// module chunks = 0","/*\n*    JavaScript Autocomplete\n*    Author: Vladimir Chernov\n*    For KeepSolid Summer Internship 2017\n*/\n\nexport const TodoItemDefaults = {\n\teditable: true,\n\tremovable: true,\n\tsingleLine: true,\n\tremoveBtnText: '<span class=\"fa fa-times-circle\">&times;</span>'\n};\n\nexport class TodoItem {\n\n\tconstructor(text, complete, options) {\n\n\t\tthis.options = Object.assign({}, TodoItemDefaults, options);\n\n\t\tthis.createElem(); // this.element\n\t\tthis.initHandlers();\n\n\t\tthis.text = text;\n\t\tthis.complete = complete;\n\t}\n\n\tget text() {\n\t\treturn this._text;\n\t}\n\n\tset text(value) {\n\t\tthis._text = value;\n\t\tif (this.textBox != document.activeElement) {\n\t\t\tthis.textBox.innerHTML = value;\n\t\t}\n\n\t\tvar itemEdit = new CustomEvent(\"todo.item.edit\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.element.dispatchEvent(itemEdit);\n\t}\n\n\tget complete() {\n\t\treturn this._complete;\n\t}\n\n\tset complete(value) {\n\t\tthis._complete = value;\n\n\t\tif (value) {\n\t\t\tthis.element.classList.add('complete');\n\t\t\tthis.checkbox.checked = true;\n\t\t} else {\n\t\t\tthis.element.classList.remove('complete');\n\t\t\tthis.checkbox.checked = false;\n\t\t}\n\n\t\tvar itemSetStatus = new CustomEvent(\"todo.item.setStatus\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.element.dispatchEvent(itemSetStatus);\n\t}\n\n\tcreateElem() {\n\t\tthis.element = document.createElement('li');\n\t\tthis.element.classList.add('todo-item');\n\n\t\tlet inner = `\n\t\t\t<label class=\"todo-item--complete\">\n\t\t\t\t<input type=\"checkbox\" tabindex=\"-1\">\n\t\t\t</label>\n\t\t\t<div class=\"todo-item--text\" contenteditable=\"${this.options.editable}\"></div>\n\t\t`;\n\t\tthis.element.innerHTML = inner;\n\n\t\tthis.checkboxLabel = this.element.querySelector('.todo-item--complete');\n\t\tthis.checkbox = this.element.querySelector('.todo-item--complete input');\n\t\tthis.textBox = this.element.querySelector('.todo-item--text');\n\n\t\tthis.options.editable && this.element.classList.add('editable');\n\t\tthis.options.singleLine && this.element.classList.add('single-line');\n\n\t\tthis.options.removable && this.createRemoveBtn();\n\t}\n\n\tcreateRemoveBtn() {\n\t\tthis.removeBtn = document.createElement('button');\n\t\tthis.removeBtn.classList.add('todo-item--icon', 'remove');\n\t\tthis.removeBtn.innerHTML = this.options.removeBtnText;\n\t\tthis.element.appendChild(this.removeBtn);\n\t}\n\n\tinitHandlers() {\n\t\tthis.checkbox.addEventListener('click', this.toggleComplete.bind(this));\n\n\t\tif (this.options.editable) {\n\t\t\tthis.textBox.addEventListener('focus', this.onTextBoxFocus.bind(this));\n\t\t\tthis.textBox.addEventListener('input', this.onTextBoxInput.bind(this));\n\t\t\tthis.textBox.addEventListener('blur', this.onTextBoxBlur.bind(this));\n\t\t}\n\n\t\tif (this.options.removable) {\n\t\t\tthis.removeBtn.addEventListener('click', this.onRemove.bind(this));\n\t\t}\n\t}\n\n\ttoggleComplete(event) {\n\t\tthis.complete = !this.complete;\n\t}\n\n\tonRemove(event) {\n\t\tvar itemRemove = new CustomEvent(\"todo.item.remove\", {\n\t\t\tbubbles: true,\n\t\t\tdetail: { item: this }\n\t\t});\n\t\tthis.element.dispatchEvent(itemRemove);\n\n\t\tthis.element.remove();\n\t}\n\n\tonTextBoxFocus(event) {\n\t\tthis.element.classList.add('active');\n\t\tthis.placeCaretAtEnd(this.textBox);\n\t}\n\n\tonTextBoxBlur(event) {\n\t\tif (this.textBox.innerHTML == '') {\n\t\t\tthis.onRemove();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.element.classList.remove('active');\n\t}\n\n\tonTextBoxInput(event) {\n\t\tthis.text = this.textBox.innerHTML;\n\t}\n\n\tupdateTextValue() {\n\t\tif (this.textBox.innerHTML && !this.isActualText()) {\n\t\t\tthis.text = this.textBox.innerHTML;\n\t\t} else {\n\t\t\tthis.textBox.innerHTML = this.text;\n\t\t}\n\t}\n\n\tisActualText() {\n\t\treturn this.text == this.textBox.innerHTML ? true : false;\n\t}\n\n\tplaceCaretAtEnd(element) {\n\t\tlet range, selection;\n\t\trange = document.createRange();\n\t\trange.selectNodeContents(element);\n\t\trange.collapse(false);\n\t\tselection = window.getSelection();\n\t\tselection.removeAllRanges();\n\t\tselection.addRange(range);\n\t}\n\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/js/todoItem.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}